{"version":3,"sources":["redux/constants.js","redux/reducers/views.js","redux/reducers/user.js","redux/reducers/cohorts.js","redux/reducers/rootReducer.js","redux/actionTypes.js","redux/store.js","redux/actions.js","pages/Login.js","components/Cohorts.js","pages/Home.js","components/StoplightStatusIndicator.js","components/TouchpointTag.js","components/GithubGraph.js","components/AddTouchpointModal.js","components/StudentCard.js","components/SortBar.js","components/StudentCardPane.js","components/AddStudentModal.js","components/StudentListPane.js","pages/Cohort.js","pages/Student.js","components/NavbarComponent.js","App.js","index.js"],"names":["COHORT_SORT_FILTERS","STARTDATE","GRADUATED","NUMSTUDENTS","STUDENT_CARD_SORT_FILTERS","FIRSTNAME","LASTNAME","STOPLIGHTSTATUS","TIMESINCETOUCHPOINT","TIMESINCECOMMIT","GITHUB","STUDENT_LIST_SORT_FILTERS","COHORT_HIDE_FILTERS","ALL","ACTIVE","INACTIVE","STUDENT_CARD_HIDE_FILTERS","STUDENT_LIST_HIDE_FILTERS","COHORT_SORT_DIRECTIONS","UP","DOWN","STUDENT_CARD_SORT_DIRECTIONS","STUDENT_LIST_SORT_DIRECTIONS","initialState","accessToken","ctime","firstName","github","id","lastName","mtime","photoUrl","refreshToken","superuser","combineReducers","user","state","action","newState","type","console","log","payload","cohorts","newStudent","student","newCohorts","forEach","cohort","studentIndex","students","findIndex","newCohort","push","cohortIndex","cohortId","targetStudentIndex","studentId","touchpoints","touchpointData","views","filter","cohortSortFilter","studentListSortFilter","NAME","studentCardSortFilter","cohortHideFilter","studentListHideFilter","studentCardHideFilter","direction","cohortSortDirection","studentCardSortDirection","studentListSortDirection","reactStore","createStore","rootReducer","composeWithDevTools","updateUser","Login","props","className","Button","variant","onClick","this","handleLogin","Component","withRouter","connect","Fragment","to","length","ListGroup","Item","as","key","map","slug","name","startDate","graduated","Home","stoplightStatus","tagStatus","tagText","GraphSquare","commitDay","idx","Math","floor","commits","OverlayTrigger","placement","overlay","Tooltip","align","style","total","repos","headerDay","today","Date","dayOfWeek","getDay","commitsArray","lastCommit","timeZone","getTimezoneOffset","timeOffset","Number","dayObject","date","add","sub","commit","getTime","find","repo","getDate","added","deleted","timeSince","parseCommits","dateString","seconds","interval","AddTouchpointModal","handleOpen","fetch","then","studentData","json","studentJson","setState","currentTags","tags","stoplightStatusEntry","modalShow","handleClose","tagEntry","text","status","commentEntry","errors","handleAddTouchpoint","method","headers","body","JSON","stringify","returnData","returnJSON","addTouchpoint","comment","userFirstName","userLastName","catch","err","handleAddTag","removeTag","tag","isStudentCard","href","value","Modal","show","Header","closeButton","Title","Body","Form","Row","Group","Col","sm","controlId","Label","ButtonToolbar","ToggleButtonGroup","onChange","ToggleButton","Control","Feedback","InputGroup","DropdownButton","Prepend","getBadgeClassFromStatus","title","Dropdown","eventKey","onSelect","placeholder","evt","target","isValid","isInvalid","Append","size","Badge","parentNode","getAttribute","Footer","React","mapDispatchToProps","badgeClass","StudentCardHeader","currentStoplightStatus","exact","Card","src","alt","StoplightStatusIndicator","height","StudentCardBody","currentTouchpoint","StudentCardBodyTouchpoint","TouchpointTag","StudentCardBodyCommits","GithubGraph","StudentCardFooter","sort","a","b","enrolledStatus","SortBar","handleStudentCardSortChange","setStudentCardSortDirection","toUpperCase","setStudentCardSortFilter","handleStudentCardHideChange","setStudentCardHideFilter","currentCohort","getCohortsByVisibilityFilter","pathName","window","location","pathname","replace","currentCohortFilter","store","sortFunction","sortFilter","sortDirection","localeCompare","getMostRecentCtime","mapStoplightStatusToInteger","sortCohortFilter","filterFunction","hideFilter","hideCohortFilter","dbArray","mostRecentEntry","getMostRecentCtimeElement","mostRecentTouchpoint","AddStudentModal","handleGithubInput","githubLookupTimeout","clearTimeout","timeoutVar","setTimeout","handleGithubApiCall","githubInput","response","responseJSON","login","firstnameInput","lastnameInput","avatar_url","split","slice","join","handleAddStudent","addStudent","responseJson","alert","error","field","width","onBlur","StudentListPaneHeader","handleSortClick","preventDefault","sortType","newSortDirection","setStudentListSortDirection","setStudentListSortFilter","xs","sort_type","StudentListPaneBody","currentCommit","deleteStudent","StudentListPane","updatedCohorts","getCohortsListByVisibilityFilter","stopPropagation","setStudentListHideFilter","cohortsProp","Cohort","currentTab","Tabs","activeKey","tab","Tab","pop","allStudents","Navbar","bg","expand","marginBottom","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","borderRadius","Divider","Link","userLogoutState","App","githubUsername","prompt","userJSON","githHub","superadmin","dispatch","handleLogout","handleAuthCallback","callbackCode","loginHandler","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e55ca58.chunk.js","sourcesContent":["export const COHORT_SORT_FILTERS = {\r\n    STARTDATE: \"startDate\",\r\n    GRADUATED: \"graduated\",\r\n    NUMSTUDENTS: \"numStudents\"\r\n}\r\n  \r\nexport const STUDENT_CARD_SORT_FILTERS = {\r\n    FIRSTNAME: \"firstName\",\r\n    LASTNAME: \"lastName\",\r\n    STOPLIGHTSTATUS: \"stoplightStatus\",\r\n    TIMESINCETOUCHPOINT: \"timeSinceTouchpoint\",\r\n    TIMESINCECOMMIT: \"timeSinceCommit\",\r\n    GITHUB: \"github\"\r\n}\r\n\r\nexport const STUDENT_LIST_SORT_FILTERS = {\r\n    FIRSTNAME: \"firstName\",\r\n    LASTNAME: \"lastName\",\r\n    STOPLIGHTSTATUS: \"stoplightStatus\",\r\n    TIMESINCETOUCHPOINT: \"timeSinceTouchpoint\",\r\n    TIMESINCECOMMIT: \"timeSinceCommit\",\r\n    GITHUB: \"github\"\r\n}\r\n\r\nexport const COHORT_HIDE_FILTERS = {\r\n    ALL: \"all\",\r\n    ACTIVE: \"active\",\r\n    INACTIVE: \"inactive\"\r\n}\r\n\r\nexport const STUDENT_CARD_HIDE_FILTERS = {\r\n    ALL: \"all\",\r\n    ACTIVE : \"active\",\r\n    INACTIVE : \"inactive\"\r\n}\r\n\r\nexport const STUDENT_LIST_HIDE_FILTERS = {\r\n    ALL: \"all\",\r\n    ACTIVE : \"active\",\r\n    INACTIVE : \"inactive\"\r\n}\r\n\r\nexport const COHORT_SORT_DIRECTIONS = {\r\n    UP : \"up\",\r\n    DOWN : \"down\"\r\n}\r\n\r\nexport const STUDENT_CARD_SORT_DIRECTIONS = {\r\n    UP : \"up\",\r\n    DOWN : \"down\"\r\n}\r\n\r\nexport const STUDENT_LIST_SORT_DIRECTIONS = {\r\n    UP : \"up\",\r\n    DOWN : \"down\"\r\n}","// import { SET_FILTER } from \"../actionTypes\";\r\n// import { VISIBILITY_FILTERS } from \"../../constants\";\r\n\r\n// const initialState = VISIBILITY_FILTERS.ALL;\r\n\r\n// const visibilityFilter = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case SET_FILTER: {\r\n//       return action.payload.filter;\r\n//     }\r\n//     default: {\r\n//       return state;\r\n//     }\r\n//   }\r\n// };\r\n\r\n// export default visibilityFilter;\r\n\r\nimport {\r\n    SET_COHORT_SORT_FILTER,\r\n    SET_COHORT_HIDE_FILTER,\r\n    SET_STUDENT_LIST_SORT_FILTER,\r\n    SET_STUDENT_LIST_HIDE_FILTER,\r\n    SET_STUDENT_CARD_SORT_FILTER,\r\n    SET_STUDENT_CARD_HIDE_FILTER,\r\n    SET_COHORT_SORT_DIRECTION,\r\n    SET_STUDENT_CARD_SORT_DIRECTION,\r\n    SET_STUDENT_LIST_SORT_DIRECTION\r\n} from \"../actionTypes\"\r\n\r\nimport {\r\n    COHORT_SORT_FILTERS,\r\n    COHORT_HIDE_FILTERS,\r\n    STUDENT_LIST_SORT_FILTERS,\r\n    STUDENT_LIST_HIDE_FILTERS,\r\n    STUDENT_CARD_SORT_FILTERS,\r\n    STUDENT_CARD_HIDE_FILTERS,\r\n    COHORT_SORT_DIRECTIONS,\r\n    STUDENT_CARD_SORT_DIRECTIONS,\r\n    STUDENT_LIST_SORT_DIRECTIONS\r\n} from \"../constants\"\r\n\r\n// const initialCohortSortFilter = COHORT_SORT_FILTERS.STARTDATE;\r\n// const initialStudentSortFilter = STUDENT_SORT_FILTERS.STOPLIGHTSTATUS;\r\n// const initialCohortHideFilter = COHORT_HIDE_FILTERS.ALL;\r\n// const initialStudentHideFilter = STUDENT_HIDE_FILTERS.ALL;\r\n\r\nconst initialState = {\r\n    \"cohortSortFilter\" : \"startDate\",\r\n    \"cohortHideFilter\" : \"active\",\r\n    \"studentListSortFilter\" : \"stoplightStatus\",\r\n    \"studentListHideFilter\" : \"active\",\r\n    \"studentCardSortFilter\" : \"stoplightStatus\",\r\n    \"studentCardHideFilter\" : \"active\",\r\n    \"studentCardSortDirection\" : \"up\",\r\n    \"studentListSortDirection\" : \"up\",\r\n    \"cohortSortDirection\" : \"up\"\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    let newState = {...state}\r\n    \r\n    switch (action.type) {\r\n        case SET_COHORT_SORT_FILTER: {\r\n            if (COHORT_SORT_FILTERS[action.filter]) {\r\n                newState.cohortSortFilter = COHORT_SORT_FILTERS[action.filter];\r\n            } else {\r\n                newState.cohortSortFilter = COHORT_SORT_FILTERS.STARTDATE\r\n            }\r\n            return newState\r\n        }\r\n        case SET_STUDENT_LIST_SORT_FILTER: {\r\n            if (STUDENT_LIST_SORT_FILTERS[action.filter]) {\r\n                newState.studentListSortFilter = STUDENT_LIST_SORT_FILTERS[action.filter];\r\n            } else {\r\n                newState.studentListSortFilter = STUDENT_LIST_SORT_FILTERS.NAME\r\n            }\r\n            return newState\r\n        }\r\n        case SET_STUDENT_CARD_SORT_FILTER: {\r\n            if (STUDENT_CARD_SORT_FILTERS[action.filter]) {\r\n                newState.studentCardSortFilter = STUDENT_CARD_SORT_FILTERS[action.filter];\r\n            } else {\r\n                newState.studentCardSortFilter = STUDENT_CARD_SORT_FILTERS.NAME\r\n            }\r\n            return newState\r\n        }\r\n        case SET_COHORT_HIDE_FILTER: {\r\n            if (COHORT_HIDE_FILTERS[action.filter]) {\r\n                newState.cohortHideFilter = COHORT_HIDE_FILTERS[action.filter];\r\n            } else {\r\n                newState.cohortHideFilter = COHORT_HIDE_FILTERS.ACTIVE\r\n            }\r\n            return newState\r\n        }\r\n        case SET_STUDENT_LIST_HIDE_FILTER: {\r\n            if (STUDENT_LIST_HIDE_FILTERS[action.filter]) {\r\n                newState.studentListHideFilter = STUDENT_LIST_HIDE_FILTERS[action.filter];\r\n            } else {\r\n                newState.studentListHideFilter = STUDENT_LIST_HIDE_FILTERS.ACTIVE\r\n            }\r\n            return newState\r\n        }\r\n        case SET_STUDENT_CARD_HIDE_FILTER: {\r\n            if (STUDENT_CARD_HIDE_FILTERS[action.filter]) {\r\n                newState.studentCardHideFilter = STUDENT_CARD_HIDE_FILTERS[action.filter];\r\n            } else {\r\n                newState.studentCardHideFilter = STUDENT_CARD_HIDE_FILTERS.ACTIVE\r\n            }\r\n            return newState\r\n        }\r\n        case SET_COHORT_SORT_DIRECTION: {\r\n            if (COHORT_SORT_DIRECTIONS[action.direction]) {\r\n                newState.cohortSortDirection = COHORT_SORT_DIRECTIONS[action.direction]\r\n            } else {\r\n                newState.cohortSortDirection = COHORT_SORT_DIRECTIONS.UP\r\n            }\r\n            return newState\r\n        }\r\n        case SET_STUDENT_CARD_SORT_DIRECTION: {\r\n            if (STUDENT_CARD_SORT_DIRECTIONS[action.direction]) {\r\n                newState.studentCardSortDirection = STUDENT_CARD_SORT_DIRECTIONS[action.direction]\r\n            } else {\r\n                newState.studentCardSortDirection = STUDENT_CARD_SORT_DIRECTIONS.UP\r\n            }\r\n            return newState\r\n        }\r\n        case SET_STUDENT_LIST_SORT_DIRECTION: {\r\n            if (STUDENT_LIST_SORT_DIRECTIONS[action.direction]) {\r\n                newState.studentListSortDirection = STUDENT_LIST_SORT_DIRECTIONS[action.direction]\r\n            } else {\r\n                newState.studentListSortDirection = STUDENT_LIST_SORT_DIRECTIONS.UP\r\n            }\r\n            return newState\r\n        }\r\n        default : {\r\n            return newState;\r\n        }\r\n    } \r\n}\r\n// export default studentListSortFilter = (state, action) => {\r\n//     let newState = {...state}\r\n\r\n//     switch (action.type) {\r\n//         case SET_STUDENT_LIST_SORT_FILTER: {\r\n//             if (STUDENT_LIST_SORT_FILTERS[action.payload.filter]) {\r\n//                 newState.cohortSortFilter = STUDENT_LIST_SORT_FILTERS[action.payload.filter];\r\n//             } else {\r\n//                 newState.cohortSortFilter = STUDENT_LIST_SORT_FILTERS.NAME\r\n//             }\r\n//             return newState\r\n//         }\r\n//         default : {\r\n//             return newState;\r\n//         }\r\n//     } \r\n// }\r\n\r\n// export default studentCardSortFilter = (state, action) => {\r\n//     let newState = {...state}\r\n\r\n//     switch (action.type) {\r\n//         case SET_STUDENT_CARD_SORT_FILTER: {\r\n//             if (STUDENT_CARD_SORT_FILTERS[action.payload.filter]) {\r\n//                 newState.cohortSortFilter = STUDENT_CARD_SORT_FILTERS[action.payload.filter];\r\n//             } else {\r\n//                 newState.cohortSortFilter = STUDENT_CARD_SORT_FILTERS.NAME\r\n//             }\r\n//             return newState\r\n//         }\r\n//         default : {\r\n//             return newState;\r\n//         }\r\n//     } \r\n// }\r\n\r\n// export default cohortHideFilter = (state, action) => {\r\n//     let newState = {...state}\r\n\r\n//     switch (action.type) {\r\n//         case SET_COHORT_HIDE_FILTER: {\r\n//             if (COHORT_HIDE_FILTERS[action.payload.filter]) {\r\n//                 newState.cohortSortFilter = COHORT_HIDE_FILTERS[action.payload.filter];\r\n//             } else {\r\n//                 newState.cohortSortFilter = COHORT_HIDE_FILTERS.ACTIVE\r\n//             }\r\n//             return newState\r\n//         }\r\n//         default : {\r\n//             return newState;\r\n//         }\r\n//     } \r\n// }\r\n\r\n// export default studentListHideFilter = (state, action) => {\r\n//     let newState = {...state}\r\n\r\n//     switch (action.type) {\r\n//         case SET_STUDENT_LIST_HIDE_FILTER: {\r\n//             if (STUDENT_LIST_HIDE_FILTERS[action.payload.filter]) {\r\n//                 newState.cohortSortFilter = STUDENT_LIST_HIDE_FILTERS[action.payload.filter];\r\n//             } else {\r\n//                 newState.cohortSortFilter = STUDENT_LIST_HIDE_FILTERS.ACTIVE\r\n//             }\r\n//             return newState\r\n//         }\r\n//         default : {\r\n//             return newState;\r\n//         }\r\n//     } \r\n// }\r\n\r\n// export default studentCardHideFilter = (state, action) => {\r\n//     let newState = {...state}\r\n\r\n//     switch (action.type) {\r\n//         case SET_STUDENT_CARD_HIDE_FILTER: {\r\n//             if (STUDENT_CARD_HIDE_FILTERS[action.payload.filter]) {\r\n//                 newState.cohortSortFilter = STUDENT_CARD_HIDE_FILTERS[action.payload.filter];\r\n//             } else {\r\n//                 newState.cohortSortFilter = STUDENT_CARD_HIDE_FILTERS.ACTIVE\r\n//             }\r\n//             return newState\r\n//         }\r\n//         default : {\r\n//             return newState;\r\n//         }\r\n//     } \r\n// }","// import { ADD_TODO, TOGGLE_TODO } from \"../actionTypes\";\r\n\r\nimport {\r\n    UPDATE_USER,\r\n    LOGIN_USER,\r\n    LOGOUT_USER\r\n} from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    accessToken: \"\",\r\n    ctime: \"\",\r\n    firstName: \"\",\r\n    github: \"\",\r\n    id: null,\r\n    lastName: \"\",\r\n    mtime: \"\",\r\n    photoUrl: \"\",\r\n    refreshToken: null,\r\n    superuser: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    \r\n    let newState = {...state}\r\n\r\n    switch (action.type) {\r\n        case UPDATE_USER: {\r\n            console.log(action.payload)\r\n            newState = action.payload\r\n            return newState\r\n        }\r\n        case LOGIN_USER: {\r\n            return newState\r\n        }\r\n        case LOGOUT_USER: {\r\n            return initialState\r\n        }\r\n        default: {\r\n            return newState\r\n        }\r\n    }\r\n}\r\n\r\n// const initialState = {\r\n//   allIds: [],\r\n//   byIds: {}\r\n// };\r\n\r\n// export default function(state = initialState, action) {\r\n//   switch (action.type) {\r\n//     case ADD_TODO: {\r\n//       const { id, content } = action.payload;\r\n//       return {\r\n//         ...state,\r\n//         allIds: [...state.allIds, id],\r\n//         byIds: {\r\n//           ...state.byIds,\r\n//           [id]: {\r\n//             content,\r\n//             completed: false\r\n//           }\r\n//         }\r\n//       };\r\n//     }\r\n//     case TOGGLE_TODO: {\r\n//       const { id } = action.payload;\r\n//       return {\r\n//         ...state,\r\n//         byIds: {\r\n//           ...state.byIds,\r\n//           [id]: {\r\n//             ...state.byIds[id],\r\n//             completed: !state.byIds[id].completed\r\n//           }\r\n//         }\r\n//       };\r\n//     }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }","import {\r\n    UPDATE_COHORTS,\r\n    ADD_TOUCHPOINT,\r\n    UPDATE_COMMITS,\r\n    UPDATE_STUDENT,\r\n    ADD_STUDENT\r\n} from \"../actionTypes\"\r\n\r\nconst initialState = []\r\n\r\nexport default function(state = initialState, action) {\r\n    let newState = [...state]\r\n\r\n    switch (action.type) {\r\n        case UPDATE_COHORTS: {\r\n            newState = action.payload\r\n            return newState\r\n        }\r\n        \r\n        case UPDATE_STUDENT: {\r\n            let newStudent = action.student\r\n            let newCohorts = []\r\n\r\n            newState.cohorts.forEach(cohort => {\r\n                let studentIndex = cohort.students.findIndex(student => {return student.id === newStudent.id})\r\n\r\n                if (studentIndex >= 0) {\r\n                    let newCohort = {...cohort}\r\n                    newCohort.students[studentIndex] = newStudent\r\n                    newCohorts.push(newCohort)\r\n                } else {\r\n                    newCohorts.push(cohort)\r\n                }\r\n            })\r\n\r\n            return newCohorts\r\n        }\r\n        \r\n        case ADD_STUDENT: {\r\n            let cohortIndex = newState.findIndex(cohort => {return cohort.id === action.cohortId})\r\n            newState[cohortIndex].students.push(action.student)\r\n            return newState\r\n        }\r\n\r\n        case ADD_TOUCHPOINT: {\r\n            let newCohorts = []\r\n\r\n            newState.forEach(cohort => {\r\n                let targetStudentIndex = cohort.students.findIndex(student => {return student.id === action.payload.studentId})\r\n                if (targetStudentIndex >= 0) {\r\n                    let newCohort = {...cohort}\r\n                    newCohort.students[targetStudentIndex].touchpoints.push(action.payload.touchpointData)\r\n                    newCohorts.push(newCohort)\r\n                } else {\r\n                    newCohorts.push(cohort)\r\n                }\r\n            })\r\n\r\n            return newCohorts\r\n        }\r\n\r\n        default: {\r\n            return newState\r\n        }\r\n    }\r\n}","// import { combineReducers } from \"redux\";\r\n// import visibilityFilter from \"./visibilityFilter\";\r\n// import todos from \"./todos\";\r\n\r\n// export default combineReducers({ todos, visibilityFilter });\r\n\r\nimport { combineReducers } from \"redux\"\r\nimport views from \"./views\"\r\nimport user from \"./user\"\r\nimport cohorts from \"./cohorts\"\r\n\r\nexport default combineReducers(\r\n    {\r\n        user,\r\n        cohorts,\r\n        views\r\n    }\r\n)\r\n","// Sort Actions\r\nexport const SET_COHORT_SORT_FILTER = \"COHORT_SORT_FILTER\"\r\nexport const SET_STUDENT_CARD_SORT_FILTER = \"STUDENT_CARD_SORT_FILTER\"\r\nexport const SET_STUDENT_LIST_SORT_FILTER = \"STUDENT_LIST_SORT_FILTER\"\r\nexport const SET_COHORT_SORT_DIRECTION = \"SET_COHORT_SORT_DIRECTION\"\r\nexport const SET_STUDENT_CARD_SORT_DIRECTION = \"SET_STUDENT_CARD_SORT_DIRECTION\"\r\nexport const SET_STUDENT_LIST_SORT_DIRECTION = \"SET_STUDENT_LIST_SORT_DIRECTION\"\r\n\r\n// Hide Actions\r\nexport const SET_COHORT_HIDE_FILTER = \"COHORT_HIDE_FILTER\"\r\nexport const SET_STUDENT_CARD_HIDE_FILTER = \"STUDENT_CARD_HIDE_FILTER\"\r\nexport const SET_STUDENT_LIST_HIDE_FILTER = \"STUDENT_LIST_HIDE_FILTER\"\r\n\r\n// Update Actions \r\n// (we will make this such that it does one giant API pull/refresh from DB)\r\nexport const UPDATE_COHORTS = \"UPDATE_COHORTS\"\r\nexport const UPDATE_STUDENT = \"UPDATE_STUDENT\"\r\nexport const ADD_STUDENT = \"ADD_STUDENT\"\r\n\r\n// User Actions\r\nexport const UPDATE_USER = \"UPDATE_USER\"\r\nexport const LOGIN_USER = \"LOGIN_USER\"\r\nexport const LOGOUT_USER = \"LOGOUT_USER\"\r\n\r\n// Touchpoint Actions\r\nexport const ADD_TOUCHPOINT = \"ADD_TOUCHPOINT\"\r\n\r\n// Commit Actions\r\nexport const UPDATE_COMMITS = \"UPDATE_COMMITS\"","import { createStore, applyMiddleware } from \"redux\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport rootReducer from \"./reducers/rootReducer.js\";\r\n\r\nconst reactStore = createStore(rootReducer, composeWithDevTools( ));\r\n\r\n// const reactStore = createStore(\r\n//     rootReducer, /* preloadedState, */\r\n//     +  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//      );\r\n// window.store = reactStore;\r\n\r\nexport default reactStore;\r\n\r\n// https://codesandbox.io/s/9on71rvnyo","// import { ADD_TODO, TOGGLE_TODO, SET_FILTER } from \"./actionTypes\";\r\n\r\n// let nextTodoId = 0;\r\n\r\n// export const addTodo = content => ({\r\n//   type: ADD_TODO,\r\n//   payload: {\r\n//     id: ++nextTodoId,\r\n//     content\r\n//   }\r\n// });\r\n\r\n// export const toggleTodo = id => ({\r\n//   type: TOGGLE_TODO,\r\n//   payload: { id }\r\n// });\r\n\r\n// export const setFilter = filter => ({ type: SET_FILTER, payload: { filter } });\r\n\r\nimport {\r\n    SET_COHORT_SORT_FILTER,\r\n    SET_STUDENT_CARD_SORT_FILTER,\r\n    SET_STUDENT_LIST_SORT_FILTER,\r\n    SET_COHORT_HIDE_FILTER,\r\n    SET_STUDENT_CARD_HIDE_FILTER,\r\n    SET_STUDENT_LIST_HIDE_FILTER,\r\n    SET_COHORT_SORT_DIRECTION,\r\n    SET_STUDENT_CARD_SORT_DIRECTION,\r\n    SET_STUDENT_LIST_SORT_DIRECTION,\r\n    UPDATE_COHORTS,\r\n    UPDATE_USER,\r\n    LOGIN_USER,\r\n    LOGOUT_USER,\r\n    ADD_TOUCHPOINT,\r\n    UPDATE_COMMITS,\r\n    UPDATE_STUDENT,\r\n    ADD_STUDENT\r\n} from \"./actionTypes\";\r\n\r\nexport const setCohortSortFilter = filter => ({\r\n    type : SET_COHORT_SORT_FILTER,\r\n    filter\r\n})\r\n\r\nexport const setCohortSortDirection = direction => ({\r\n    type : SET_COHORT_SORT_DIRECTION,\r\n    direction\r\n})\r\n\r\nexport const setStudentCardSortFilter = filter => ({\r\n    type : SET_STUDENT_CARD_SORT_FILTER,\r\n    filter\r\n})\r\n\r\nexport const setStudentCardSortDirection = direction => ({\r\n    type : SET_STUDENT_CARD_SORT_DIRECTION,\r\n    direction\r\n})\r\n\r\nexport const setStudentListSortFilter = filter => ({\r\n    type : SET_STUDENT_LIST_SORT_FILTER,\r\n    filter\r\n})\r\n\r\nexport const setStudentListSortDirection = direction => ({\r\n    type : SET_STUDENT_LIST_SORT_DIRECTION,\r\n    direction\r\n})\r\n\r\nexport const setCohortHideFilter = filter => ({\r\n    type : SET_COHORT_HIDE_FILTER,\r\n    filter\r\n})\r\n\r\nexport const setStudentCardHideFilter = filter => ({\r\n    type : SET_STUDENT_CARD_HIDE_FILTER,\r\n    filter\r\n})\r\n\r\nexport const setStudentListHideFilter = filter => ({\r\n    type : SET_STUDENT_LIST_HIDE_FILTER,\r\n    filter\r\n})\r\n\r\nexport const updateCohorts = payload => ({\r\n    type : UPDATE_COHORTS,\r\n    payload\r\n})\r\n\r\nexport const updateUser = payload => ({\r\n    type : UPDATE_USER,\r\n    payload\r\n})\r\n\r\nexport const loginUser = payload => ({\r\n    type : LOGIN_USER,\r\n    payload\r\n})\r\n\r\nexport const logoutUser = payload => ({\r\n    type : LOGOUT_USER,\r\n    payload\r\n})\r\n\r\nexport const addTouchpoint = payload => ({\r\n    type : ADD_TOUCHPOINT,\r\n    payload : {\r\n        studentId : payload.studentId,\r\n        touchpointData : payload.touchpointData\r\n    }\r\n})\r\n\r\nexport const updateCommits = payload => ({\r\n    type : UPDATE_COMMITS,\r\n    payload : {\r\n        studentId : payload.studentId,\r\n        commitData : payload.commitData\r\n    }\r\n})\r\n\r\nexport const updateStudent = student => ({\r\n    type : UPDATE_STUDENT,\r\n    student\r\n})\r\n\r\nexport const addStudent = payload => ({\r\n    type : ADD_STUDENT,\r\n    cohortId : payload.cohortId,\r\n    student : payload.student\r\n})","import React, { Component } from 'react';\r\nimport { withRouter  } from 'react-router-dom';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n            {/* <NavbarComponent /> */}\r\n\r\n                <Button  variant=\"primary\" onClick={this.props.handleLogin}>\r\n                    Login With Github\r\n                </Button >\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Login);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {ListGroup, Button} from 'react-bootstrap';\r\nimport { IndexLinkContainer, LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Cohorts = ({ cohorts, user }) => (\r\n    <React.Fragment>\r\n        <div>\r\n            {!user.id ? (\r\n                <Link to={'./auth/github'}>\r\n                    <Button  variant=\"primary\">\r\n                        Login With Github\r\n                    </Button >\r\n                </Link>\r\n            ) \r\n            : \r\n            (<div></div>)\r\n            }   \r\n        </div>\r\n        \r\n        \r\n        <div className=\"container\">\r\n            {cohorts && cohorts.length ? \r\n                (<ListGroup>\r\n                    <ListGroup.Item as=\"li\" key=\"header\" variant=\"secondary\">\r\n                        <div className=\"row\" >\r\n                            <div className=\"col-sm-7\">Cohort</div>\r\n                            <div className=\"col-sm-3\">Start Date</div>\r\n                            <div className=\"col-sm-1\">Active</div>\r\n                            <div className=\"col-sm-1\">Students</div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n                    {cohorts.map(cohort => {return (\r\n                        <LinkContainer to={'/'+cohort.slug} key={cohort.slug}>\r\n                            <ListGroup.Item action >\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-sm-7\">{cohort.name}</div>\r\n                                    <div className=\"col-sm-3\">{cohort.startDate}</div>\r\n                                    <div className=\"col-sm-1\">{!cohort.graduated ? \"✔\" : \"❌\"}</div>\r\n                                    <div className=\"col-sm-1\">{cohort.students.length}</div>\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        </LinkContainer>\r\n                        )}\r\n                    )}\r\n                </ListGroup>)\r\n                : \r\n                (<div></div>)\r\n            }\r\n        </div>\r\n    </React.Fragment>\r\n)\r\n\r\nconst mapStateToProps = state => ({ \r\n    cohorts: state.cohorts,\r\n    user : state.user \r\n})\r\n\r\nexport default connect(mapStateToProps)(Cohorts);","import React, { Component } from 'react';\r\nimport { Link, Redirect, withRouter, Route } from 'react-router-dom';\r\nimport Cohorts from './../components/Cohorts'\r\n\r\nclass Home extends Component {\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"App\">\r\n      {/* <NavbarComponent /> */}\r\n\r\n      <Cohorts />\r\n      \r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Home);","import React from 'react';\r\n\r\nexport default ({stoplightStatus}) => (\r\n    <React.Fragment>\r\n        {(() => {\r\n            switch (stoplightStatus) {\r\n                case 'green': return (\r\n                    <span className=\"badge badge-pill badge-success\"><i className=\"material-icons pt-1 stoplight-badge\">done</i></span>\r\n                    )\r\n                case 'yellow': return (\r\n                    <span className=\"badge badge-pill badge-warning\"><i className=\"material-icons pt-1 stoplight-badge\">help_outline</i></span>\r\n                    )\r\n                case 'red': return (\r\n                    <span className=\"badge badge-pill badge-danger\"><i className=\"material-icons pt-1\">warning</i></span>\r\n                    )\r\n                default: return (\r\n                    <span className=\"badge badge-pill badge-secondary\"><i className=\"material-icons pt-1\">warning</i></span>\r\n                    )\r\n            }\r\n        })()}\r\n    </React.Fragment>\r\n)","import React from 'react';\r\n\r\nexport default ({tagStatus, tagText}) => {\r\n\r\n    switch (tagStatus) {\r\n        case 'green': return (<span className=\"badge badge-success mr-auto my-1\">{tagText}</span>)\r\n        case 'yellow': return (<span className=\"badge badge-warning mr-auto my-1\">{tagText}</span>)\r\n        case 'red': return (<span className=\"badge badge-danger mr-auto my-1\">{tagText}</span>)\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nconst GraphSquare = ({commitDay, idx}) => (\r\n    <React.Fragment>\r\n        {idx%7 === 0 ? <div className=\"graph-item graph-item-header\">{'#' + (Math.floor(idx/7)+1)}</div> : ''}\r\n        {commitDay.commits.length ? \r\n            (<OverlayTrigger key=\"\" placement=\"bottom\" overlay={\r\n                <Tooltip>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr><td align=\"right\">Commits:</td><td align=\"left\" style={{'paddingLeft':'5px'}}>{commitDay.commits.length}</td></tr>\r\n                            <tr><td align=\"right\">Lines:</td><td align=\"left\" style={{'paddingLeft':'5px'}}>{commitDay.total}</td></tr>\r\n                            <tr><td align=\"right\">Repos:</td><td align=\"left\" style={{'paddingLeft':'5px'}}>{commitDay.repos ? commitDay.repos.length : 0}</td></tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Tooltip>\r\n            }>\r\n                <div className={`graph-item ${ \r\n                    commitDay.commits.length < 4 ?\r\n                    ['no', 'sm', 'md', 'lg', 'xl'][commitDay.commits.length]\r\n                    : \r\n                    'xl'\r\n                    }-commits`}></div>\r\n            </OverlayTrigger>)\r\n        :\r\n            (<div className={`graph-item no-commits`} />)\r\n        }\r\n    </React.Fragment>\r\n)\r\n\r\nexport default ({student}) => (\r\n    <div className=\"graph-container\">\r\n        {['','','M','','W','','F',''].map((headerDay, idx) => {\r\n            return (<div className=\"graph-item graph-item-header\" key={headerDay + idx}>{headerDay}</div>)})\r\n        }\r\n        {parseCommits(student.commits, student).commits.map((commitDay, idx) => {\r\n            return (<GraphSquare commitDay={commitDay} idx={idx} key={idx} />)\r\n        })}\r\n    </div>\r\n)\r\n\r\nfunction parseCommits(commits, student) {\r\n    if (!commits.length) return null\r\n\r\n    let today = new Date()\r\n    let dayOfWeek = today.getDay()\r\n    let commitsArray = []\r\n    let lastCommit = null\r\n\r\n    // Show 4 weeks max\r\n    for (let idx=(21+dayOfWeek); idx>=0; idx--) {\r\n        let timeZone = new Date().getTimezoneOffset()\r\n        let timeOffset = Number(timeZone*60*1000)\r\n        let offset = 24*60*60*1000\r\n        let dayObject = {\r\n            commits : [],\r\n            repos : [],\r\n            date : null,\r\n            total : null,\r\n            add : null,\r\n            sub : null\r\n        }\r\n\r\n        commits.forEach(commit => {\r\n            commit.ctime = new Date(commit.ctime)\r\n\r\n            if ((commit.ctime.getTime() < today.getTime() - (idx*offset) + timeOffset ) && \r\n                (commit.ctime.getTime() > today.getTime() - (idx*offset) - offset + timeOffset\r\n            )) {\r\n                \r\n                dayObject.commits.push(commit)\r\n                if (!dayObject.repos.find(repo => {return repo === commit.repo} ) ) {\r\n                    dayObject.repos.push(commit.repo)\r\n                }\r\n                dayObject.date = commit.ctime.getDate()\r\n                dayObject.total += commit.total\r\n                dayObject.add += commit.added\r\n                dayObject.sub += commit.deleted\r\n\r\n                lastCommit = commit\r\n            }\r\n        })\r\n        commitsArray.push(dayObject)\r\n    }\r\n\r\n\r\n    return {\r\n        \"commits\" : commitsArray,\r\n        \"lastCommit\" : lastCommit ? timeSince(lastCommit.ctime) : null,\r\n        \"commitCreated\" : lastCommit ? lastCommit.ctime : null\r\n    }\r\n}\r\n\r\nfunction timeSince(dateString) {\r\n    let date = new Date(dateString)\r\n    if (!date) {\r\n        return ''\r\n    }\r\n    var seconds = Math.floor((new Date() - date) / 1000);\r\n    var interval = Math.floor(seconds / 31536000);\r\n    if (interval > 1) {\r\n        return interval + \" years\";\r\n    }\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) {\r\n        return interval + \" months\";\r\n    }\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval > 1) {\r\n        return interval + \" days\";\r\n    }\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval > 1) {\r\n        return interval + \" hours\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval > 1) {\r\n        return interval + \" minutes\";\r\n    }\r\n    return Math.floor(seconds) + \" seconds\";\r\n}","import React, { Component } from 'react';\r\nimport { Dropdown, DropdownButton, Badge, Modal, Form, Button, Row, Col, InputGroup, ButtonToolbar, ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\r\nimport {connect} from 'react-redux'\r\n\r\nimport { addTouchpoint } from './../redux/actions'\r\n\r\nclass AddTouchpointModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalShow : false,\r\n            stoplightStatusEntry : 'green',\r\n            tagEntry: {\r\n                text : '',\r\n                status : 'green'\r\n            },\r\n            currentTags : [],\r\n            commentEntry : '',\r\n            errors : {\r\n                stoplightStatusEntry : null,\r\n                tagEntry : null,\r\n                currentTags : null,\r\n                commentEntry : null,\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        fetch(`/api/students/${this.props.studentId}`)\r\n        .then(studentData => {\r\n            return studentData.json()\r\n        })\r\n        .then(studentJson => {\r\n            if (!studentJson) return\r\n\r\n            this.setState({\r\n                currentTags : studentJson.tags,\r\n                stoplightStatusEntry : studentJson.stoplightStatus,\r\n                modalShow : true\r\n            })\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            modalShow : false,\r\n            stoplightStatusEntry : 'green',\r\n            tagEntry: {\r\n                text : '',\r\n                status : 'green'\r\n            },\r\n            currentTags : [],\r\n            commentEntry : '',\r\n            errors : {\r\n                stoplightStatusEntry : null,\r\n                tagEntry : null,\r\n                currentTags : null,\r\n                commentEntry : null,\r\n            }\r\n        })\r\n    }\r\n\r\n    handleAddTouchpoint = () => {\r\n        let studentId = this.props.studentId\r\n\r\n        fetch('/api/touchpoints', {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body : JSON.stringify({\r\n                'ctime' : new Date(),\r\n                'student' : this.props.studentId,\r\n                'stoplightStatus' : this.state.stoplightStatusEntry,\r\n                'tags' : JSON.stringify(this.state.currentTags),\r\n                'comment' : this.state.commentEntry\r\n            })\r\n        })\r\n        .then(returnData => {\r\n            return returnData.json()\r\n        })\r\n        .then(returnJSON => {\r\n            console.log(returnJSON)\r\n            this.props.addTouchpoint({\r\n                studentId : returnJSON.student,\r\n                touchpointData : {\r\n                    id:returnJSON.id,\r\n                    ctime: returnJSON.ctime,\r\n                    student: returnJSON.student,\r\n                    stoplightStatus: returnJSON.stoplightStatus,\r\n                    comment: returnJSON.comment,\r\n                    user: this.props.user.id,\r\n                    userFirstName: this.props.user.firstName,\r\n                    userLastName: this.props.user.lastName,\r\n                    tags: returnJSON.tags\r\n                }\r\n            })\r\n            this.handleClose()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleAddTag = () => {\r\n        this.setState({\r\n            currentTags : this.state.currentTags ? [...this.state.currentTags, {...this.state.tagEntry}] : [{...this.state.tagEntry}],\r\n            tagEntry: {\r\n                text : '',\r\n                status : 'green'\r\n            },\r\n        })\r\n    }\r\n\r\n    removeTag = (tagText) => {\r\n        this.setState({\r\n            currentTags: this.state.currentTags.filter(tag => {return tag.text != tagText})\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.isStudentCard ?\r\n                    (<div className=\"d-flex justify-content-center py-2 add-touchpoint-button\">\r\n                        <a href='#' onClick={this.handleOpen}>Add Touchpoint</a>\r\n                    </div>)\r\n                :\r\n                    (<Button variant=\"primary\" value=\"addTouchpoint\" onClick={this.handleOpen} className=\"ml-auto btn-lg px-2 py-0 mb-2\">＋</Button>)\r\n                }\r\n\r\n                <Modal show={this.state.modalShow}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add Touchpoint...</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Row className=\"my-2\">\r\n                                <Form.Group as={Col} sm={4} controlId=\"inputGithub\">\r\n                                    <Form.Label>Stoplight Status</Form.Label>\r\n                                    <ButtonToolbar>\r\n                                        <ToggleButtonGroup className=\"stoplightStatus\" type=\"radio\" name=\"stoplightButtons\" value={this.state.stoplightStatusEntry} onChange={state => {this.setState({stoplightStatusEntry : state})}}>\r\n                                            <ToggleButton value={'green'} variant=\"success\"><i className=\"material-icons pt-1\">done</i></ToggleButton>\r\n                                            <ToggleButton value={'yellow'} variant=\"warning\"><i className=\"material-icons pt-1\">help_outline</i></ToggleButton>\r\n                                            <ToggleButton value={'red'} variant=\"danger\"><i className=\"material-icons pt-1\">warning</i></ToggleButton>\r\n                                        </ToggleButtonGroup>\r\n                                    </ButtonToolbar>\r\n                                    <Form.Control.Feedback type=\"invalid\">{this.state.errors.stoplightStatusEntry ? this.state.errors.stoplightStatusEntry : ''}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} sm={8} controlId=\"inputGithub\">\r\n                                    <Form.Label>Github Profile</Form.Label>\r\n                                    <InputGroup>\r\n                                        <DropdownButton\r\n                                            as={InputGroup.Prepend}\r\n                                            variant={'outline-' + getBadgeClassFromStatus(this.state.tagEntry.status)}\r\n                                            title={this.state.tagEntry.status}\r\n                                            // title = {getBadgeGlyphFromStatus(this.state.tagEntry.status)} \r\n                                        >\r\n                                            <Dropdown.Item eventKey=\"green\" onSelect={state => {this.setState({tagEntry : {...this.state.tagEntry, status:state}})}}>Green</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"yellow\" onSelect={state => {this.setState({tagEntry : {...this.state.tagEntry, status:state}})}}>Yellow</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"red\" onSelect={state => {this.setState({tagEntry : {...this.state.tagEntry, status:state}})}}>Red</Dropdown.Item>\r\n                                        </DropdownButton>\r\n                                        <Form.Control \r\n                                            type=\"input\" \r\n                                            placeholder=\"Add Tag\" \r\n                                            value={this.state.tagEntry.text} \r\n                                            onChange={evt => {this.setState({tagEntry : {...this.state.tagEntry, text:evt.target.value}})}} \r\n                                            isValid={this.state.errors.tagEntry !== null}\r\n                                            isInvalid={this.state.errors.tagEntry}></Form.Control>\r\n                                        <InputGroup.Append>\r\n                                            <Button size=\"sm\" variant=\"outline-secondary\" onClick={this.handleAddTag}>＋</Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n                                    {this.state.currentTags ? \r\n                                    this.state.currentTags.map(tag => {\r\n                                        return (<Badge key={tag.text} id={tag.text} variant={getBadgeClassFromStatus(tag.status)} className=\"mr-auto my-1\">\r\n                                            {tag.text}\r\n                                            <span className=\"delete-tag linkstyle\" onClick={(evt) => {this.removeTag(evt.target.parentNode.parentNode.getAttribute(\"id\"))}}>\r\n                                                <i className=\"material-icons\">cancel</i>\r\n                                            </span>\r\n                                        </Badge>)\r\n                                    })\r\n                                    :\r\n                                    (<div></div>)\r\n                                    }\r\n                                    <Form.Control.Feedback type=\"invalid\">{this.state.errors.tagEntry ? this.state.errors.tagEntry : ''}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row className=\"my-2\">\r\n                                <Form.Group as={Col} controlId=\"inputFirstName\">\r\n                                    <Form.Label>First Name</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"textarea\" \r\n                                        placeholder=\"Comments...\" \r\n                                        value={this.state.commentEntry} \r\n                                        onChange={(evt) => {this.setState({commentEntry : evt.target.value})}}\r\n                                        isValid={this.state.errors.commentEntry !== null}\r\n                                        isInvalid={this.state.errors.commentEntry}></Form.Control>\r\n                                </Form.Group>\r\n                            </Row>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleAddTouchpoint}>\r\n                            Add Touchpoint\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addTouchpoint\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTouchpointModal)\r\n\r\nfunction getBadgeClassFromStatus(status) {\r\n    let badgeClass = ''\r\n    switch (status) {\r\n        case 'green':\r\n            badgeClass = 'success'\r\n            break;\r\n        case 'yellow':\r\n            badgeClass = 'warning'\r\n            break;\r\n        case 'red':\r\n            badgeClass = 'danger'\r\n            break;\r\n        default:\r\n            badgeClass = 'success'\r\n    }\r\n    return badgeClass\r\n}\r\n\r\nfunction getBadgeGlyphFromStatus(status) {\r\n    switch (status) {\r\n        case 'green':\r\n            return (<i className=\"material-icons\">done</i>)\r\n        case 'yellow':\r\n            return (<i className=\"material-icons\">help_outline</i>)\r\n        case 'red':\r\n            return (<i className=\"material-icons\">warning</i>)\r\n        default:\r\n            return(<i></i>)\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport StoplightStatusIndicator from './StoplightStatusIndicator';\r\nimport TouchpointTag from './TouchpointTag';\r\nimport GithubGraph from './GithubGraph'\r\nimport AddTouchpointModal from \"./AddTouchpointModal\"\r\n\r\nconst StudentCardHeader = ({student, currentStoplightStatus}) => (\r\n    <LinkContainer to={\"/students/\"+student.github} exact>\r\n        <Card.Header className=\"d-flex flex-row linkstyle\">\r\n            <div>\r\n                <img className=\"student-photo\" src={student.photoUrl ? student.photoUrl : '/images/noPhoto.png'} alt=\"student photo\"/>\r\n            </div>\r\n            <div className=\"w-100\">\r\n                <div className=\"d-flex flex-row justify-content-between stoplight-status-div\">\r\n                    <h4 className=\"mx-2 student-name text-truncate\">{student.firstName + ' ' + student.lastName}</h4>\r\n                    <StoplightStatusIndicator stoplightStatus={currentStoplightStatus} />\r\n                </div>\r\n                <div className=\"d-flex flex-row\">\r\n                    <img src='/images/GitHub-Mark.png' style={{height:\"25px\"}} />\r\n                    <a href={\"https://github.com/\"+student.github}>{student.github}</a>\r\n                </div>\r\n            </div>\r\n        </Card.Header>\r\n    </LinkContainer>\r\n)\r\n\r\nconst StudentCardBody = ({student, currentTouchpoint}) => (\r\n    <Card.Body className=\"d-flex flex-row student-info\">\r\n        <StudentCardBodyTouchpoint student={student} currentTouchpoint={currentTouchpoint} />\r\n        <StudentCardBodyCommits student={student} />\r\n    </Card.Body>\r\n)\r\n\r\nconst StudentCardBodyTouchpoint = ({student, currentTouchpoint}) => (\r\n    <div className=\"d-flex flex-column student-touchpoint\">\r\n        <div className=\"student-touchpoint-title\">Last Touchpoint</div>\r\n        {currentTouchpoint && currentTouchpoint.comment ? (<div className=\"student-touchpoint-comment\"><small>{currentTouchpoint.comment}</small></div>) : <div></div>}\r\n        {currentTouchpoint && currentTouchpoint.tags ? \r\n            currentTouchpoint.tags.map(tag => {\r\n                return (<TouchpointTag tagStatus={tag.status} tagText={tag.text} key={tag.text}/>)\r\n            })\r\n        : \r\n        <div></div>\r\n        }\r\n        {currentTouchpoint ? (<div className=\"blockquote-footer touchpoint-date\">{timeSince(currentTouchpoint.ctime) + ' ago by ' + currentTouchpoint.userFirstName + ' ' + currentTouchpoint.userLastName} </div>) : <div></div>}\r\n    </div>\r\n)\r\n\r\nconst StudentCardBodyCommits = ({student}) => (\r\n    <div className=\"d-flex flex-column student-commits\">\r\n        <div className=\"student-touchpoint-title\">Latest Commits</div>\r\n        {student.commits && student.commits.length ? \r\n            (<GithubGraph student={student} />)\r\n        :\r\n            (<div></div>)\r\n        }\r\n    </div>\r\n)\r\n\r\nconst StudentCardFooter = ({student, user}) => (\r\n    <Card.Footer className=\"d-flex flex-row student-card-footer p-0\">\r\n        <div className=\"d-flex justify-content-center py-2\">\r\n            <LinkContainer to={\"/students/\" + student.github}>\r\n                <a href>Details</a>\r\n            </LinkContainer>\r\n        </div>\r\n        <AddTouchpointModal user={user} studentId={student.id} isStudentCard={true} />\r\n        {/* <div className=\"d-flex justify-content-center py-2 add-touchpoint-button\">\r\n            <a href='#'>Add Touchpoint</a>\r\n        </div> */}\r\n    </Card.Footer>\r\n)\r\n\r\nconst StudentCard = ({ cohorts, studentId, cohortId, user }) => {\r\n    const student = cohorts.filter(cohort => {return cohort.id === cohortId})[0].students.filter(student => {return student.id === studentId})[0]\r\n    const currentTouchpoint = student.touchpoints.sort((a,b) => {\r\n        return new Date(b.ctime).getTime() - new Date(a.ctime).getTime() \r\n    })[0]\r\n\r\n    return (\r\n        <Card className={student.enrolledStatus ? 'student-card' : 'student-card student-card-inactive'}>\r\n            <StudentCardHeader student={student} currentStoplightStatus = {currentTouchpoint ? currentTouchpoint.stoplightStatus : null} />\r\n            <StudentCardBody student={student} currentTouchpoint={currentTouchpoint} />\r\n            <StudentCardFooter student={student} user={user} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    user : state.user,\r\n    cohorts: state.cohorts\r\n    \r\n})\r\n\r\nexport default connect(mapStateToProps)(StudentCard);\r\n\r\nfunction timeSince(dateString) {\r\n    let date = new Date(dateString)\r\n    if (!date) {\r\n        return ''\r\n    }\r\n    var seconds = Math.floor((new Date() - date) / 1000);\r\n    var interval = Math.floor(seconds / 31536000);\r\n    if (interval > 1) {\r\n        return interval + \" years\";\r\n    }\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) {\r\n        return interval + \" months\";\r\n    }\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval > 1) {\r\n        return interval + \" days\";\r\n    }\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval > 1) {\r\n        return interval + \" hours\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval > 1) {\r\n        return interval + \" minutes\";\r\n    }\r\n    return Math.floor(seconds) + \" seconds\";\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport {Navbar, Nav, NavDropdown, Form, Button, ButtonToolbar, ToggleButtonGroup, ToggleButton} from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\nimport { setStudentCardHideFilter, setStudentCardSortFilter, setStudentCardSortDirection} from \"./../redux/actions\"\r\n\r\nclass SortBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    handleStudentCardSortChange = (value) => {\r\n        if (value === 'up' || value === 'down') {\r\n            this.props.setStudentCardSortDirection(value.toUpperCase())\r\n        } else {\r\n            this.props.setStudentCardSortFilter(value.toUpperCase())\r\n        }\r\n    }\r\n\r\n    handleStudentCardHideChange = (value) => {\r\n        this.props.setStudentCardHideFilter(value.toUpperCase())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex flex-row justify-content-between mx-2\">\r\n                <h2>{this.props.currentCohort.name}</h2>\r\n                <div className=\"sort-controls\">\r\n                    <h6>Sort:</h6>\r\n                    <Form.Control as=\"select\" value={this.props.views.studentCardSortFilter} onChange={evt => this.handleStudentCardSortChange(evt.target.value)}>\r\n                        <option text=\"Name\" value=\"firstName\">Name</option>\r\n                        <option text=\"Last Name\" value=\"lastName\"> Last Name</option>\r\n                        <option text=\"Github Username\" value=\"github\"> Github Username</option>\r\n                        <option text=\"Stoplight Status\" value=\"stoplightStatus\"> Stoplight Status</option>\r\n                        <option text=\"Last Commit\" value=\"timeSinceCommit\"> Last Commit</option>\r\n                        <option text=\"Last Touchpoint\" value=\"timeSinceTouchpoint\"> Last Touchpoint</option>\r\n                    </Form.Control>\r\n                    <ButtonToolbar>\r\n                        <ToggleButtonGroup type=\"radio\" name=\"sortUpDownCard\" value={this.props.views.studentCardSortDirection} onChange={this.handleStudentCardSortChange}>\r\n                            <ToggleButton value={'up'} variant=\"light\">Up</ToggleButton>\r\n                            <ToggleButton value={'down'} variant=\"light\">Down</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </ButtonToolbar>\r\n                    <h6>Show:</h6>\r\n                    <ButtonToolbar>\r\n                        <ToggleButtonGroup type=\"radio\" name=\"hideStudentCard\" value={this.props.views.studentCardHideFilter} onChange={this.handleStudentCardHideChange}>\r\n                            <ToggleButton value={'active'} variant=\"light\">Active</ToggleButton>\r\n                            <ToggleButton value={'inactive'} variant=\"light\">Inactive</ToggleButton>\r\n                            <ToggleButton value={'all'} variant=\"light\">All</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </ButtonToolbar>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n    views : state.views\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setStudentCardSortFilter,\r\n    setStudentCardHideFilter,\r\n    setStudentCardSortDirection\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortBar);","import React, { PureComponent } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getCohortCardsByVisibilityFilter } from './../redux/selectors'\r\n\r\nimport StudentCard from \"./StudentCard\"\r\nimport SortBar from \"./SortBar\"\r\n\r\nconst StudentCardPane = ({views, currentCohort}) => (\r\n    <div>\r\n        {currentCohort.id ? \r\n            (<React.Fragment>\r\n                <SortBar currentCohort={currentCohort} />\r\n                <div className=\"d-flex flex-row flex-wrap student-cards\" >\r\n                    {currentCohort.students.map(student => {return <StudentCard studentId={student.id} cohortId={currentCohort.id} views={views} key={student.id}/>})}\r\n                </div>\r\n            </React.Fragment>)\r\n        :\r\n            (<div></div>)\r\n        }\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = state => { \r\n    const views = state.views\r\n\r\n    let cohorts = getCohortsByVisibilityFilter(state)\r\n\r\n    const pathName = window.location.pathname.replace(/\\W/g, '')\r\n    let currentCohortFilter = cohorts.length ? cohorts.filter(cohort => {return cohort.slug == pathName}) : []\r\n    let currentCohort = currentCohortFilter.length ? currentCohortFilter[0] : null\r\n    \r\n    return {views, currentCohort}\r\n}\r\n\r\nexport default connect(mapStateToProps)(StudentCardPane);\r\n\r\nconst getCohortsByVisibilityFilter = (store) => {\r\n    let sortFunction = sortCohortFilter(store.views.studentCardSortFilter, store.views.studentCardSortDirection)\r\n    let filterFunction = hideCohortFilter(store.views.studentCardHideFilter)\r\n\r\n    let cohorts = [...store.cohorts];\r\n    let newCohorts = []\r\n    cohorts.forEach(currentCohort => {\r\n        currentCohort.students.sort(sortFunction).filter(filterFunction)\r\n        newCohorts.push(currentCohort)\r\n    })\r\n    return newCohorts\r\n};\r\n\r\nfunction sortCohortFilter(sortFilter, sortDirection) {\r\n\r\n    switch (sortFilter) {\r\n        case \"firstName\":\r\n            return (sortDirection === 'up') ? \r\n            (a, b) => {return ('' + a.firstName).localeCompare(b.firstName)} \r\n            : \r\n            (b, a) => {return ('' + a.firstName).localeCompare(b.firstName)} \r\n        case \"lastName\":\r\n            return (sortDirection === 'up') ? \r\n            (a, b) => {return ('' + a.lastName).localeCompare(b.lastName)} \r\n            : \r\n            (b, a) => {return ('' + a.lastName).localeCompare(b.lastName)} \r\n        case \"github\":\r\n            return (sortDirection === 'up') ? \r\n            (a, b) => {return ('' + a.github).localeCompare(b.github)} \r\n            : \r\n            (b, a) => {return ('' + a.github).localeCompare(b.github)} \r\n        case \"timeSinceTouchpoint\":\r\n            return (sortDirection === 'up') ?\r\n            (a,b) => {return getMostRecentCtime(b.touchpoints) - getMostRecentCtime(a.touchpoints)}\r\n            :\r\n            (b,a) => {return getMostRecentCtime(b.touchpoints) - getMostRecentCtime(a.touchpoints)}\r\n        case \"timeSinceCommit\":\r\n            return (sortDirection === 'up') ?\r\n            (a,b) => {return getMostRecentCtime(b.commits) - getMostRecentCtime(a.commits)}\r\n            :\r\n            (b,a) => {return getMostRecentCtime(b.commits) - getMostRecentCtime(a.commits)}\r\n        case \"stoplightStatus\" :\r\n            return (sortDirection === 'up') ?\r\n            (a, b) => {return mapStoplightStatusToInteger(b.touchpoints)-mapStoplightStatusToInteger(a.touchpoints)}\r\n            :\r\n            (b,a) => {return mapStoplightStatusToInteger(b.touchpoints)-mapStoplightStatusToInteger(a.touchpoints)}\r\n        default:\r\n            return (a,b) => {return 0}\r\n    }\r\n}\r\n\r\nfunction hideCohortFilter(hideFilter) {\r\n    switch (hideFilter) {\r\n        case \"all\": {\r\n            return (student) => {return true}\r\n        }\r\n        case \"active\" : {\r\n            return (student) => {return student.enrolledStatus}\r\n        }\r\n        case \"inactive\" : {\r\n            return (student) => {return !student.enrolledStatus}\r\n        }\r\n        case \"default\" : {\r\n            return (student) => {return true}\r\n        }\r\n    }\r\n}\r\n\r\nfunction getMostRecentCtime(dbArray) {\r\n    let mostRecentEntry = getMostRecentCtimeElement(dbArray)\r\n    return mostRecentEntry ? new Date(mostRecentEntry.ctime).getTime() : 0\r\n}\r\n\r\nfunction getMostRecentCtimeElement(dbArray) {\r\n    if (!dbArray.length) return null\r\n\r\n    return dbArray.sort((a,b) => {\r\n        return new Date(b.ctime).getTime() - new Date(a.ctime).getTime() \r\n    })[0]\r\n}\r\n\r\nfunction mapStoplightStatusToInteger(touchpoints) {\r\n    let mostRecentTouchpoint = getMostRecentCtimeElement(touchpoints)\r\n    let stoplightStatus = mostRecentTouchpoint ? mostRecentTouchpoint.stoplightStatus : null\r\n\r\n    switch (stoplightStatus) {\r\n        case \"green\" : {return 1}\r\n        case \"yellow\" : {return 2}\r\n        case \"red\" : {return 3}\r\n        default : {return 4}\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Modal, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport {connect} from 'react-redux'\r\n\r\nimport { addStudent } from './../redux/actions'\r\n\r\nclass AddStudentModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            githubInput : '',\r\n            firstnameInput : '',\r\n            lastnameInput : '',\r\n            photoUrl : '',\r\n            modalShow : false,\r\n            githubLookupTimeout : null,\r\n            errors : {\r\n                githubInput : null,\r\n                firstnameInput : null,\r\n                lastnameInput : null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleGithubInput = (evt) => {\r\n        if (this.state.githubLookupTimeout) {window.clearTimeout(this.state.githubLookupTimeout)}\r\n\r\n        let timeoutVar = setTimeout(this.handleGithubApiCall, 5000)\r\n        this.setState({\r\n            githubInput : evt.target.value,\r\n            githubLookupTimeout : timeoutVar\r\n        })\r\n\r\n    }\r\n\r\n    handleGithubApiCall = () => {\r\n        console.log('ToDo : github API call')\r\n        if (this.state.githubLookupTimeout) {window.clearTimeout(this.state.githubLookupTimeout)}\r\n\r\n        fetch('https://api.github.com/users/'+this.state.githubInput)\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(responseJSON => {\r\n            console.log(responseJSON)\r\n            if(!responseJSON.login) {\r\n                this.setState({\r\n                    firstnameInput : '',\r\n                    lastnameInput : '',\r\n                    photoUrl : '',\r\n                    errors : {\r\n                        ...this.state.errors,\r\n                        githubInput : `${this.state.githubInput} is not a valid Github username`\r\n                    }\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    errors : {\r\n                        ...this.state.errors,\r\n                        githubInput : false\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (responseJSON.avatar_url) {\r\n                this.setState({photoUrl : responseJSON.avatar_url})\r\n            }\r\n\r\n            if (responseJSON.name) {\r\n                this.setState({\r\n                    firstnameInput : responseJSON.name.split(' ').slice(0,1)[0],\r\n                    lastnameInput : responseJSON.name.split(' ').slice(1).join(' ')\r\n                })\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            githubLookupTimeout : null\r\n        })\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            modalShow : true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            githubInput : '',\r\n            firstnameInput : '',\r\n            lastnameInput : '',\r\n            photoUrl : '',\r\n            modalShow : false\r\n        })\r\n    }\r\n\r\n    handleAddStudent = () => {\r\n        console.log('Todo: add student - ', this.state.githubInput, this.state.firstnameInput, this.state.lastnameInput, this.state.photoUrl)\r\n        \r\n        fetch('/api/students', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                cohort : this.props.cohort.id,\r\n                firstName : this.state.firstnameInput,\r\n                lastName : this.state.lastnameInput,\r\n                github : this.state.githubInput,\r\n                photoUrl : this.state.photoUrl,\r\n                enrolledStatus : true \r\n            }),\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                console.log('success')\r\n                return response.json()\r\n            } else {\r\n                console.log('ERRORRRORRR - ', response)\r\n            }\r\n        })\r\n        .then(responseJSON => {\r\n            // studentId, firstName, lastName, github, photoUrl\r\n            this.props.addStudent({\r\n                cohortId : this.props.cohort.id,\r\n                student : {\r\n                    id: responseJSON.studentId,\r\n                    ctime: new Date(),\r\n                    mtime: new Date(),\r\n                    firstName: responseJSON.firstName,\r\n                    lastName: responseJSON.lastName,\r\n                    github: responseJSON.github,\r\n                    photoUrl: responseJSON.photoUrl,\r\n                    enrolledStatus: true,\r\n                    touchpoints: [],\r\n                    commits: []\r\n                }\r\n            })\r\n            this.handleClose()\r\n        })\r\n        .catch(err => {\r\n            if (err.status === 400) {\r\n                err.json()\r\n                .then(responseJson => {\r\n                    console.log(responseJson)\r\n                    window.alert(`Student failed to add! \\n${responseJson.errors.map(error => {return error.field + ': ' + error.error + '\\n'}).join('')}`)\r\n                })\r\n            } else {\r\n                console.log('error adding student - ', err)\r\n                window.alert('Server error')\r\n            }   \r\n        })\r\n        \r\n        // this.handleClose()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Button variant=\"primary\" value=\"addStudent\" onClick={this.handleOpen} className=\"ml-auto btn-lg px-2 py-0 mb-2\">＋</Button>\r\n\r\n                <Modal show={this.state.modalShow}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add Student...</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Row className=\"my-2\">\r\n                                <Col sm={2} className='ml-1 px-0'>\r\n                                    <img src={this.state.photoUrl ? this.state.photoUrl : '/images/noPhoto.png'} style={{width:'100%'}}/>\r\n                                </Col>\r\n                                <Form.Group as={Col} controlId=\"inputGithub\">\r\n                                    <Form.Label>Github Profile</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"input\" \r\n                                        placeholder=\"Github Username\" \r\n                                        value={this.state.githubInput} \r\n                                        onChange={this.handleGithubInput} \r\n                                        onBlur={this.handleGithubApiCall}\r\n                                        isValid={this.state.errors.githubInput !== null}\r\n                                        isInvalid={this.state.errors.githubInput}></Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">{this.state.errors.githubInput ? this.state.errors.githubInput : ''}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Col className=\"pt-3\">\r\n                                    <small>Just the username, not the whole URL</small>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"my-2\">\r\n                                <Form.Group as={Col} controlId=\"inputFirstName\">\r\n                                    <Form.Label>First Name</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"input\" \r\n                                        placeholder=\"First Name\" \r\n                                        value={this.state.firstnameInput} \r\n                                        onChange={(evt) => {this.setState({firstnameInput : evt.target.value})}}\r\n                                        isValid={this.state.errors.firstnameInput !== null}\r\n                                        isInvalid={this.state.errors.firstnameInput}></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"inputLastName\">\r\n                                    <Form.Label>First Name</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"input\" \r\n                                        placeholder=\"Last Name\" \r\n                                        value={this.state.lastnameInput} \r\n                                        onChange={(evt) => {this.setState({lastnameInput : evt.target.value})}}\r\n                                        isValid={this.state.errors.lastnameInput !== null}\r\n                                        isInvalid={this.state.errors.lastnameInput}></Form.Control>\r\n                                </Form.Group>\r\n                            </Row>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleAddStudent}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addStudent\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddStudentModal)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n// import { getCohortListsByVisibilityFilter } from './../redux/selectors'\r\nimport { setStudentListHideFilter, setStudentListSortFilter, setStudentListSortDirection} from \"./../redux/actions\"\r\n\r\nimport { ListGroup, Row, Col, Badge, Button } from 'react-bootstrap';\r\n\r\nimport StoplightStatusIndicator from './StoplightStatusIndicator'\r\nimport AddStudentModal from './AddStudentModal'\r\n\r\nclass StudentListPaneHeader extends React.Component {\r\n\r\n    handleSortClick = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        let sortType = evt.target.getAttribute('sort_type')\r\n        if (!sortType) return\r\n\r\n        if (this.props.views.studentListSortFilter === sortType) {\r\n            let newSortDirection = this.props.views.studentListSortDirection === 'up' ? 'down' : 'up'\r\n            this.props.setStudentListSortDirection(newSortDirection.toUpperCase())\r\n        } else {\r\n            this.props.setStudentListSortFilter(sortType.toUpperCase())\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ListGroup.Item variant=\"secondary\">\r\n                <Row>\r\n                    <Col xs={1} onClick={(evt) => {this.handleSortClick(evt)}}>\r\n                        <h6 sort_type=\"stoplightStatus\" className=\"linkstyle d-flex flex-row\">\r\n                            Status {this.props.views.studentListSortFilter === \"stoplightStatus\" ? \r\n                                (<Badge variant=\"light\" className=\"ml-2\">{this.props.views.studentListSortDirection === 'up' ? \"▲\" : \"▼\"}</Badge>) \r\n                                : (<span></span>)\r\n                            }\r\n                        </h6>\r\n                    </Col>\r\n                    <Col xs={5} onClick={(evt) => {this.handleSortClick(evt)}}>\r\n                        <h6 sort_type=\"firstName\" className=\"linkstyle d-flex flex-row\">\r\n                            Name {this.props.views.studentListSortFilter === \"firstName\" ? \r\n                                (<Badge variant=\"light\" className=\"ml-2\">{this.props.views.studentListSortDirection === 'up' ? \"▲\" : \"▼\"}</Badge>) \r\n                                : (<span></span>)\r\n                            }\r\n                        </h6>\r\n                    </Col>\r\n                    <Col xs={2} onClick={(evt) => {this.handleSortClick(evt)}}>\r\n                        <h6 sort_type=\"timeSinceTouchpoint\" className=\"linkstyle d-flex flex-row\">\r\n                            Last Touchpoint {this.props.views.studentListSortFilter === \"timeSinceTouchpoint\" ? \r\n                                (<Badge variant=\"light\" className=\"ml-2\">{this.props.views.studentListSortDirection === 'up' ? \"▲\" : \"▼\"}</Badge>) \r\n                                : (<span></span>)\r\n                            }\r\n                        </h6>\r\n                    </Col>\r\n                    <Col xs={2} onClick={(evt) => {this.handleSortClick(evt)}}>\r\n                        <h6 sort_type=\"timeSinceCommit\" className=\"linkstyle d-flex flex-row\">\r\n                            Last Commit {this.props.views.studentListSortFilter === \"timeSinceCommit\" ? \r\n                                (<Badge variant=\"light\" className=\"ml-2\">{this.props.views.studentListSortDirection === 'up' ? \"▲\" : \"▼\"}</Badge>) \r\n                                : (<span></span>)\r\n                            }\r\n                        </h6>\r\n                    </Col>\r\n                    <Col xs={1} onClick={(evt) => {this.handleSortClick(evt)}}>\r\n                        <h6 sort_type=\"github\" className=\"linkstyle d-flex flex-row\">\r\n                            Active {this.props.views.studentListSortFilter === \"github\" ? \r\n                                (<Badge variant=\"light\" className=\"ml-2\">{this.props.views.studentListSortDirection === 'up' ? \"▲\" : \"▼\"}</Badge>) \r\n                                : (<span></span>)\r\n                            }\r\n                        </h6>\r\n                    </Col>\r\n                    <Col xs={1}>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n    )}\r\n}\r\n\r\nconst StudentListPaneBody = ({currentCohort}) => (\r\n    <React.Fragment>\r\n        {currentCohort.students.map(student => {\r\n            const currentTouchpoint = student.touchpoints.sort((a,b) => {\r\n                return new Date(b.ctime).getTime() - new Date(a.ctime).getTime() \r\n            })[0]\r\n\r\n            const currentCommit = student.commits.sort((a,b) => {\r\n                return new Date(b.ctime).getTime() - new Date(a.ctime).getTime() \r\n            })[0]\r\n            \r\n            return (\r\n            <LinkContainer to={\"/students/\" + student.github} key={student.id}>\r\n                <ListGroup.Item action>\r\n                    <Row>\r\n                        <Col xs={1}><StoplightStatusIndicator stoplightStatus={currentTouchpoint ? currentTouchpoint.stoplightStatus : null} /></Col>\r\n                        <Col xs={5}>{student.firstName + ' ' + student.lastName}</Col>\r\n                        <Col xs={2}>{currentTouchpoint ? timeSince(currentTouchpoint.ctime) : ''}</Col>\r\n                        <Col xs={2}>{currentCommit ? timeSince(currentCommit.ctime) : ''}</Col>\r\n                        <Col xs={1}>{student.enrolledStatus ? 'Y' : 'N'}</Col>\r\n                        <Col xs={1}>\r\n                            <Button variant=\"danger\" value={student.id} onClick={deleteStudent}>X</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n            </LinkContainer>\r\n            \r\n        )})}\r\n    </React.Fragment>\r\n)\r\n\r\nclass StudentListPane extends React.Component {\r\n\r\n    render() {\r\n        const updatedCohorts = getCohortsListByVisibilityFilter(this.props.cohorts, this.props.views)\r\n        const pathName = window.location.pathname.replace(/\\W/g, '')\r\n        const currentCohortFilter = updatedCohorts.length ? updatedCohorts.filter(cohort => {return cohort.slug === pathName}) : []\r\n        const currentCohort = currentCohortFilter.length ? currentCohortFilter[0] : null\r\n\r\n        return (<div>\r\n            {currentCohort ? \r\n                (<React.Fragment>\r\n                    \r\n                    <div className=\"container-lg\">\r\n                        <div className=\"d-flex flex-row\">\r\n                            <h2>{currentCohort.name}</h2>\r\n                            {/* <Button variant=\"primary\" value=\"addStudent\" onClick={addStudent} className=\"ml-auto btn-lg px-2 py-0 mb-2\">＋</Button> */}\r\n                            <AddStudentModal cohort={currentCohort}/>\r\n                        </div>\r\n                        <ListGroup>\r\n                            <StudentListPaneHeader {...this.props} />\r\n                            <StudentListPaneBody currentCohort={currentCohort} />\r\n                        </ListGroup>\r\n                    </div>\r\n                </React.Fragment>)\r\n            :\r\n                (<div>Nothing Here...</div>)\r\n            }\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst deleteStudent = (evt) => {\r\n    evt.preventDefault()\r\n    evt.stopPropagation()\r\n    let studentId = evt.target.value\r\n    console.log('Todo: delete student ', studentId)\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setStudentListSortFilter,\r\n    setStudentListHideFilter,\r\n    setStudentListSortDirection\r\n}\r\n\r\nconst mapStateToProps = state => { \r\n    const views = state.views\r\n    const cohorts = state.cohorts\r\n    \r\n    return {views, cohorts}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentListPane);\r\n\r\nconst getCohortsListByVisibilityFilter = (cohortsProp, views) => {\r\n\r\n    let sortFunction = sortCohortFilter(views.studentListSortFilter, views.studentListSortDirection)\r\n    let filterFunction = hideCohortFilter(views.studentListHideFilter)\r\n\r\n    let cohorts = [...cohortsProp];\r\n    let newCohorts = []\r\n    cohorts.forEach(currentCohort => {\r\n        currentCohort.students.sort(sortFunction).filter(filterFunction)\r\n        newCohorts.push(currentCohort)\r\n    })\r\n    return newCohorts\r\n};\r\n\r\nfunction sortCohortFilter(sortFilter, sortDirection) {\r\n\r\n    switch (sortFilter) {\r\n        case \"firstName\":\r\n            return (sortDirection === 'up') ? \r\n            (a, b) => {return ('' + a.firstName).localeCompare(b.firstName)} \r\n            : \r\n            (b, a) => {return ('' + a.firstName).localeCompare(b.firstName)} \r\n        case \"lastName\":\r\n            return (sortDirection === 'up') ? \r\n            (a, b) => {return ('' + a.lastName).localeCompare(b.lastName)} \r\n            : \r\n            (b, a) => {return ('' + a.lastName).localeCompare(b.lastName)} \r\n        case \"github\":\r\n            return (sortDirection === 'up') ? \r\n            (a, b) => {return ('' + a.github).localeCompare(b.github)} \r\n            : \r\n            (b, a) => {return ('' + a.github).localeCompare(b.github)} \r\n        case \"timeSinceTouchpoint\":\r\n            return (sortDirection === 'up') ?\r\n            (a,b) => {return getMostRecentCtime(b.touchpoints) - getMostRecentCtime(a.touchpoints)}\r\n            :\r\n            (b,a) => {return getMostRecentCtime(b.touchpoints) - getMostRecentCtime(a.touchpoints)}\r\n        case \"timeSinceCommit\":\r\n            return (sortDirection === 'up') ?\r\n            (a,b) => {return getMostRecentCtime(b.commits) - getMostRecentCtime(a.commits)}\r\n            :\r\n            (b,a) => {return getMostRecentCtime(b.commits) - getMostRecentCtime(a.commits)}\r\n        case \"stoplightStatus\" :\r\n            return (sortDirection === 'up') ?\r\n            (a, b) => {return mapStoplightStatusToInteger(b.touchpoints)-mapStoplightStatusToInteger(a.touchpoints)}\r\n            :\r\n            (b,a) => {return mapStoplightStatusToInteger(b.touchpoints)-mapStoplightStatusToInteger(a.touchpoints)}\r\n        default:\r\n            return (a,b) => {return 0}\r\n    }\r\n}\r\n\r\nfunction hideCohortFilter(hideFilter) {\r\n    switch (hideFilter) {\r\n        case \"all\": {\r\n            return (student) => {return true}\r\n        }\r\n        case \"active\" : {\r\n            return (student) => {return student.enrolledStatus}\r\n        }\r\n        case \"inactive\" : {\r\n            return (student) => {return !student.enrolledStatus}\r\n        }\r\n        case \"default\" : {\r\n            return (student) => {return true}\r\n        }\r\n    }\r\n}\r\n\r\nfunction getMostRecentCtime(dbArray) {\r\n    let mostRecentEntry = getMostRecentCtimeElement(dbArray)\r\n    return mostRecentEntry ? new Date(mostRecentEntry.ctime).getTime() : 0\r\n}\r\n\r\nfunction getMostRecentCtimeElement(dbArray) {\r\n    if (!dbArray.length) return null\r\n\r\n    return dbArray.sort((a,b) => {\r\n        return new Date(b.ctime).getTime() - new Date(a.ctime).getTime() \r\n    })[0]\r\n}\r\n\r\nfunction mapStoplightStatusToInteger(touchpoints) {\r\n    let mostRecentTouchpoint = getMostRecentCtimeElement(touchpoints)\r\n    let stoplightStatus = mostRecentTouchpoint ? mostRecentTouchpoint.stoplightStatus : null\r\n\r\n    switch (stoplightStatus) {\r\n        case \"green\" : {return 1}\r\n        case \"yellow\" : {return 2}\r\n        case \"red\" : {return 3}\r\n        default : {return 4}\r\n    }\r\n}\r\n\r\n\r\nfunction timeSince(dateString) {\r\n    let date = new Date(dateString)\r\n    if (!date) {\r\n        return ''\r\n    }\r\n    var seconds = Math.floor((new Date() - date) / 1000);\r\n    var interval = Math.floor(seconds / 31536000);\r\n    if (interval > 1) {\r\n        return interval + \" years\";\r\n    }\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) {\r\n        return interval + \" months\";\r\n    }\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval > 1) {\r\n        return interval + \" days\";\r\n    }\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval > 1) {\r\n        return interval + \" hours\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval > 1) {\r\n        return interval + \" minutes\";\r\n    }\r\n    return Math.floor(seconds) + \" seconds\";\r\n}","import React, { Component } from 'react';\r\nimport {Tabs, Tab} from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport StudentCardPane from \"./../components/StudentCardPane\"\r\nimport StudentListPane from \"./../components/StudentListPane\"\r\n\r\nclass Cohort extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentTab : \"studentCards\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <React.Fragment>\r\n                {this.props.user.id ?\r\n                    <React.Fragment>\r\n                        <Tabs activeKey={this.state.currentTab} onSelect={tab => this.setState({currentTab : tab})}>\r\n                            <Tab eventKey=\"studentCards\" title=\"Dashboard\">\r\n                                <StudentCardPane />\r\n                            </Tab>\r\n                            <Tab eventKey=\"studentList\" title=\"Students\">\r\n                                <StudentListPane />\r\n                            </Tab>\r\n                            <Tab eventKey=\"cohortSettings\" title=\"Settings\"></Tab>\r\n                        </Tabs>\r\n                    </React.Fragment>\r\n                    :\r\n                    <h2>Nothing here...</h2>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n    {user : state.user}\r\n)\r\n\r\nexport default connect(mapStateToProps)(Cohort);","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Student = ({ cohorts, user }) => {\r\n    let pathName = window.location.pathname.split(/[/ ]+/).pop()\r\n    let allStudents = []\r\n    cohorts.forEach(cohort => {\r\n        cohort.students.forEach(student => {\r\n            allStudents.push(student)\r\n        })\r\n    })\r\n    \r\n    const student = allStudents.filter(student => {return student.github === pathName})[0]\r\n    const currentTouchpoint = student.touchpoints.sort((a,b) => {\r\n        return new Date(b.ctime).getTime() - new Date(a.ctime).getTime() \r\n    })[0]\r\n    const currentStoplightStatus = currentTouchpoint ? currentTouchpoint.stoplightStatus : null    \r\n\r\n    return ( \r\n        <React.Fragment>\r\n            {student && user.id ?\r\n                <React.Fragment>\r\n                    <h2>{student.firstName + ' ' + student.lastName}</h2>\r\n                </React.Fragment>\r\n                :\r\n                <h2>Nothing here...</h2>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n    cohorts: state.cohorts,\r\n    user: state.user \r\n})\r\n\r\nexport default connect(mapStateToProps)(Student);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap'\r\nimport { IndexLinkContainer, LinkContainer } from 'react-router-bootstrap';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst NavbarComponent = ({ user }) => (\r\n\r\n    <React.Fragment>\r\n      {!user.id ?\r\n        <Navbar bg=\"light\" expand=\"lg\" style={{marginBottom : \"20px\"}}>\r\n            <IndexLinkContainer to=\"/\">\r\n                <Navbar.Brand >Headmaster II</Navbar.Brand>\r\n            </IndexLinkContainer>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <IndexLinkContainer to=\"/\">\r\n                        <Nav.Link >Home</Nav.Link>\r\n                    </IndexLinkContainer>\r\n                    <LinkContainer to=\"/auth/github\">\r\n                        <Nav.Link>\r\n                            <div className=\"d-flex flex-row align-items-center linkstyle\">\r\n                            <img className=\"mr-2\" src=\"./images/GitHub-mark.png\" style={{height:'30px', width:'30px'}} />\r\n                                <p className=\"my-0 py-0\"> Login with Github</p>\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        :\r\n        <Navbar bg=\"light\" expand=\"lg\" style={{marginBottom : \"20px\"}}>\r\n            <IndexLinkContainer to=\"/\">\r\n                <Navbar.Brand >Headmaster II</Navbar.Brand>\r\n            </IndexLinkContainer>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <NavDropdown title=\r\n                        {<React.Fragment>\r\n                            <img className=\"mr-2\" src={user.photoUrl} style={{height:'30px', width:'30px', borderRadius:'50%'}} />\r\n                            {user.firstName}\r\n                        </React.Fragment>}\r\n                     id=\"basic-nav-dropdown\">\r\n                        <IndexLinkContainer to=\"/\">\r\n                            <NavDropdown.Item>Home</NavDropdown.Item>\r\n                        </IndexLinkContainer>\r\n                        <LinkContainer to=\"/cohorts\">\r\n                            <NavDropdown.Item>Cohorts</NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <NavDropdown.Divider />\r\n                        <LinkContainer to=\"/logout\">\r\n                            <NavDropdown.Item>Logout</NavDropdown.Item>\r\n                        </LinkContainer>\r\n                    </NavDropdown>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n      }\r\n    </React.Fragment>\r\n)\r\n\r\nconst mapStateToProps = state => ({ user: state.user })\r\n\r\nexport default connect(mapStateToProps)(NavbarComponent);","import React, { Component, useReducer } from 'react';\r\nimport { Route, BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport { updateCohorts, updateUser } from './redux/actions'\r\nimport store from './redux/store'\r\n\r\nimport { connect } from 'react-redux'\r\n// import { * } from './actionCreators'\r\n\r\nimport Login from './pages/Login'\r\nimport Home from './pages/Home';\r\nimport Cohort from './pages/Cohort';\r\nimport Student from './pages/Student';\r\nimport NavbarComponent from './components/NavbarComponent';\r\n\r\nconst userLogoutState = {\r\n  accessToken: \"\",\r\n  ctime: \"\",\r\n  firstName: \"\",\r\n  github: \"\",\r\n  id: null,\r\n  lastName: \"\",\r\n  mtime: \"\",\r\n  photoUrl: \"\",\r\n  refreshToken: null,\r\n  superuser: null\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user : null\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    // Check if user exists in state. If so, populate cohorts\r\n  }\r\n\r\n  handleLogin = () => {\r\n    const githubUsername = window.prompt('Please enter your github username', 'prphntm63')\r\n\r\n    fetch('https://api.github.com/users/'+githubUsername)\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .then(userJSON => {\r\n      if (!userJSON.login) {\r\n        window.alert(`${githubUsername} is not a valid Github username`)\r\n      }\r\n        \r\n      let user = {\r\n        id : githubUsername,\r\n        github : githubUsername,\r\n        superuser : 'superadmin'\r\n      }\r\n\r\n      if (userJSON.avatar_url) {\r\n        user.photoUrl = userJSON.avatar_url\r\n      }\r\n\r\n      if (userJSON.name) {\r\n        user.firstName = userJSON.name.split(' ').slice(0,1)[0]\r\n        user.lastName = userJSON.name.split(' ').slice(1).join(' ')\r\n      }\r\n\r\n      return user\r\n    })\r\n    .then(user => {\r\n\r\n      if (!user) return null\r\n\r\n      this.setState({\r\n        user : {\r\n          firstName : user.firstName,\r\n          lastName : user.lastName,\r\n          github : user.githHub,\r\n          superuser : user.superadmin,\r\n          photoUrl : user.photoUrl\r\n        }\r\n      })\r\n\r\n      store.dispatch(updateUser(user))\r\n    })\r\n  }\r\n\r\n  handleLogout = () => {\r\n    window.location.href = `http://localhost:5000/logout`\r\n    store.dispatch(updateUser(userLogoutState))\r\n    this.setState({\r\n      user : null\r\n    })\r\n    console.log('Logout')\r\n  }\r\n\r\n  render() {\r\n    const handleAuthCallback = () => {\r\n      let currentUrl = window.location.href\r\n      let callbackCode = currentUrl.split(\"?\")[1]\r\n      console.log(callbackCode)\r\n\r\n      window.location.href = `http://localhost:5000/auth/github/callback?${callbackCode}`;\r\n\r\n      return (<div></div>)\r\n    }\r\n\r\n    const loginHandler = () => {\r\n      window.location.href = `http://localhost:5000/auth/github`;\r\n      console.log('Auth Call')\r\n    }\r\n\r\n    const App = () => (\r\n      <BrowserRouter>\r\n        <NavbarComponent />\r\n        <Switch>\r\n          <Route exact path='/' >{this.state.user ? <Home /> : <Login handleLogin={this.handleLogin}/>}</Route>\r\n          <Route path='/auth/github' render={loginHandler} exact />\r\n          <Route path='/auth/github/callback' render={handleAuthCallback} exact/>\r\n          <Route path='/logout' render={this.handleLogout} exact />\r\n          <Route path='/students/*'>{this.state.user ? <Student /> : <Redirect to=\"\" />}</Route>\r\n          <Route path='/*'>{this.state.user ? <Cohort /> : <Redirect to=\"\" />}</Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n\r\n    return (\r\n      <App/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nrender((\r\n    <Provider store={store}>\r\n\r\n            <App/>\r\n\r\n    </Provider>\r\n), document.getElementById('root'));\r\n\r\n// // If you want your app to work offline and load faster, you can change\r\n// // unregister() to register() below. Note this comes with some pitfalls.\r\n// // Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}